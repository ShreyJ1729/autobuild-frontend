A frontend application built using React in Typescript that is an online file system. Use REST APIs for interaction and use Recoil for state management.
graph TD;
%% UI components
App["App.tsx"]
FileExplorer["FileExplorer.tsx"]
Folder["Folder.tsx"]
File["File.tsx"]
ContextMenu["ContextMenu.tsx"]
ContextMenuOption["ContextMenuOption.tsx"]

%% UI component connections
App --> |renders|FileExplorer
FileExplorer --> |iteratively renders|Folder
FileExplorer --> |iteratively renders|File
ContextMenu --> |iteratively renders|ContextMenuOption
ContextMenu --> |hides|FileExplorer

%% UI component props
FolderProps["name:string"]
FileProps["name:string,\ntype:string,\nmodified:string"]
ContextMenuOptionProps["label:string,\naction:function"]

%% UI component function definitions
FileExplorer-fetchFiles["fetchFiles"]
ContextMenu-openContextMenu["openContextMenu"]
ContextMenu-closeContextMenu["closeContextMenu"]
ContextMenuOption-copy["copy"]
ContextMenuOption-delete["delete"]

%% UI component function connections
FileExplorer --> |calls|FileExplorer-fetchFiles
Folder --> |opens|ContextMenu
File --> |opens|ContextMenu
ContextMenu --> |calls|ContextMenu-openContextMenu
ContextMenu --> |calls|ContextMenu-closeContextMenu
ContextMenuOption-copy --> |calls|Folder.copyFile|
ContextMenuOption-delete --> |calls|File.deleteFile

%% utils/REST APIs
utils/restAPI[utils/restAPI.ts]
utils/restAPI --> |fetches files|FileExplorer-fetchFiles
utils/restAPI --> |deletes file|File.deleteFile
utils/restAPI --> |copies file|Folder.copyFile

%% utils/recoil
utils/recoil[utils/recoil.ts]
filesAtom["[{name:string,\ntype:string,\nmodified:string},...]"]
selectedItemAtom["{name:string,\ntype:string}"]
contextMenuVisibleAtom["boolean"]
utils/recoil --> |stores files|filesAtom
utils/recoil --> |stores selected item|selectedItemAtom
utils/recoil --> |stores context menu visibility|contextMenuVisibleAtom

%% recoil function connections
FileExplorer-fetchFiles --> |updates|filesAtom
Folder.copyFile --> |updates|filesAtom
File.deleteFile --> |updates|filesAtom
Folder --> |reads/writes|selectedItemAtom
File --> |reads/writes|selectedItemAtom
ContextMenu --> |reads/writes|contextMenuVisibleAtom

%% UI component props connections
Folder -.-> |props|FolderProps
File -.-> |props|FileProps
ContextMenuOption -.-> |props|ContextMenuOptionProps