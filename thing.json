{
    "App.tsx": {
        "moduleImports": [
            "react-router-dom"
        ],
        "fileImports": [
            "containers/Auth/Auth",
            "pages/Home",
            "components/Layout/Layout",
            "components/UI/PageLoader/PageLoader",
            "pages/ArchivedNote",
            "fbase"
        ],
        "props": {},
        "methods": {},
        "contains": []
    },

    "shared/firebase.tsx": {
        "moduleImports": [
            "firebase"
        ],
        "fileImports": [
            "types/Note",
            "fbase"
        ],
        "props": {},
        "methods": {
            "addLabelToStore": "(string) => Promise<void>",
            "addLabelToNote": "(string, string) => Promise<void>",
            "removeLabelFromNote": "(string, string) => Promise<void>",
            "removeLabelFromStore": "(string) => Promise<void>",
            "editLabelFromStore": "(string, string) => Promise<void>",
            "addNoteToStore": "(Note) => Promise<void>",
            "removeNoteFromStore": "(string) => Promise<void>",
            "editNote": "(string, string, string) => Promise<void>",
            "toggleNotePin": "(string, boolean) => Promise<void>",
            "toggleNoteTodo": "(string, boolean) => Promise<void>",
            "changeColor": "(string, string) => Promise<void>",
            "changeNoteToArchives": "(string) => Promise<void>",
            "changeArchivesToNotes": "(string) => Promise<void>"
        }
    },

    "shared/utility.tsx": { 
        "moduleImports": [],
        "fileImports": [
            "types/Note",
            "types/Todo"
        ],
        "props": {},
        "methods": {
            "updateObject": "(any, any) => any",
            "updateAllLabels": "(Note[], string, string) => Note[]",
            "convertNoteToTodo": "(string) => Todo[] | undefined",
            "convertTodoToNote": "(Todo[] | undefined) => string | undefined",
            "searchNote": "(string, Note[]) => Note[]",
            "highlightText": "(string, string) => React.ReactNode",
            "capitalizeFirstLetter": "(string) => string"
        }
    },

    "shared/types.tsx": {
        "moduleImports": [],
        "fileImports": [],
        "props": {},
        "methods": {},
        "contains": [
            "Dispatch<SetStateAction<S>>",
            "string | number",
            "string",
            "Note",
            "Todo",
            "LabelObj"
        ]
    },

    "shared/dnd.ts": {
        "moduleImports": [],
        "fileImports": [],
        "props": {},
        "methods": {},
        "contains": ["ItemTypes"]
    },

    "pages/LabelPage.tsx": {
        "moduleImports": [
            "react-router-dom",
            "react-redux"
        ],
        "fileImports": [
            "fbase",
            "components/Notes/Notes",
            "shared/utility",
            "components/UI/NoMatching/NoMatching",
            "store/reducers",
            "shared/types"
        ],
        "props": {
            "match": "RouteComponentProps<MatchParams>"
        },
        "methods": {},
        "contains": []
    },
    
    "containers/Note/Note.tsx": {
        "moduleImports": [
            "react-redux",
            "react-router-dom"
        ],
        "fileImports": [
            "components/Note/Note",
            "components/Note/NoteElements",
            "components/Note/NoteLayout",
            "components/ToDoList/ToDoList",
            "shared/utility",
            "shared/types",
            "shared/firebase",
            "store/actions/notes",
            "store/reducers"
        ],
        "props": {
            "note": "NoteProp"
        },
        "methods": {},
        "contains": []
    },

    "containers/Note/NoteElements.tsx": {
        "moduleImports": [
            "styled-components"
        ],
        "fileImports": [],
        "props": {},
        "methods": {},
        "contains": [
            "NoteContainer",
            "NoteTitle",
            "NoteContent",
            "ToolbarContainer",
            "Container"
        ]
    },

    "containers/Note/NoteLayout.tsx": {
        "moduleImports": [],
        "fileImports": [
            "containers/Toolbar/Toolbar",
            "containers/Toolbar/Tool/Tool",
            "containers/Label/Label",
            "containers/Note/NoteElements",
            "containers/Label/LabelElements/NoteLabel/NoteLabel",
            "hooks/useClickOutside",
            "shared/types"
        ], 
        "props": {
            "note": "Note",
            "clicked": "number",
            "isHovering": "boolean",
            "onDelete": "(id: string) => void",
            "setIsHovering": "Dispatcher<boolean>",
            "onClick": "(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "onClose": "(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void",
            "children": "React.ReactNode"
        },
        "methods": {},
        "contains": []
    },

    "containers/Toolbar/Tool/ToolElements.tsx": {
        "moduleImports": [
            "styled-components"
        ],
        "fileImports": [
            "icons/pin.svg",
            "icons/pin-fill.svg"
        ],
        "props": {
            "bgImage": "string",
            "notePin": "boolean",
            "isPinned": "boolean",
            "inputPin": "boolean",
            "isLabel": "boolean",
            "editLabel": "boolean"
        },
        "methods": {},
        "contains": []
    },

    "store/actions/notes.tsx": {
        "moduleImports": [],
        "fileImports": [
            "shared/types"
        ],
        "props": {},
        "methods": {},
        "contains": [
            "initNotes",
            "initLabels",
            "getEditableNote",
            "clearEditableNote",
            "removeLabel",
            "renameLabel"
        ]
    },

    "store/actions/view.ts": {
        "moduleImports": [],
        "fileImports": [],
        "props": {},
        "methods": {},
        "contains": [
            "showFlashMessage",
            "hideFlashMessage",
            "getSearchQuery"
        ]
    }
}